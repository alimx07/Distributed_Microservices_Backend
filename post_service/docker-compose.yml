version: '3.8'

services:
  post_service:
    build:
      context: .
      dockerfile: Dockerfile
    image: post_service:1.0.0
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=mypassword
      - DB_NAME=postdb
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=50051
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - 50051:50051
  kafka:
    image: docker.io/bitnami/kafka:latest
    container_name: kafka
    ports:
      - 9094:9094
    volumes:
      - kafka_data:/bitnami
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    depends_on:
      - postgres

  connect:
    image: debezium/connect:3.0.0.Final
    container_name: connect
    ports:
      - 8083:8083
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - ROUP_ID=connect_cluster1
      - CONFIG_STORAGE_TOPIC=connect_configs
      - OFFSET_STORAGE_TOPIC=connect_offsets
      - STATUS_STORAGE_TOPIC=connect_status
      - KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - NTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
    depends_on:
      - kafka

  postgres:
    image: postgres:17
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: postdb
      POSTGRES_HOST: postgres
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    command: postgres -c wal_level=logical -c max_wal_senders=5 -c max_replication_slots=5
    depends_on:
      - post_service
  redis:
    image: bitnami/redis:latest
    container_name: redis
    ports:
       - 6379:6379
    environment:
      - REDIS_AOF_ENABLED=no
      - REDIS_PASSWORD=mypassword
    volumes:
      - ./redis_data:/bitnami/redis/data
volumes:
  kafka_data:
    driver: local