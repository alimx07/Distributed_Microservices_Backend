version: '3.8'

networks:
  redis_cluster_net:
    driver: bridge
  postgres_net:
    driver: bridge
  app_net:
    driver: bridge

services:
  post_service:
    build:
      context: .
      dockerfile: Dockerfile
    image: post_service:1.0.0
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=mypassword
      - DB_NAME=postdb
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=50051
      - CACHE_ADDR=redis-node-1
      - CACHE_PORT=6379
    ports:
      - 50051:50051
    networks:
      - app_net
      - postgres_net
      - redis_cluster_net

  kafka:
    image: docker.io/bitnami/kafka:latest
    container_name: kafka
    ports:
      - 9094:9094
    volumes:
      - kafka_data:/bitnami
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    networks:
      - app_net

  connect:
    image: debezium/connect:3.0.0.Final
    container_name: connect
    ports:
      - 8083:8083
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=connect_cluster1
      - CONFIG_STORAGE_TOPIC=connect_configs
      - OFFSET_STORAGE_TOPIC=connect_offsets
      - STATUS_STORAGE_TOPIC=connect_status
    depends_on:
      - kafka
    networks:
      - app_net

  postgres_primary:
    image: postgres:17
    container_name: postgres_primary
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: postdb
      POSTGRES_HOST: postgres
    volumes:
      - ./primary_data:/var/lib/postgresql/data
      - ./primary_init:/docker-entrypoint-initdb.d
    depends_on:
      - post_service
    networks:
      - postgres_net

  postgres_secondary:
    image: postgres:17
    container_name: postgres_secondary
    ports:
      - 5433:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypassword
      PGDATA: /var/lib/postgresql/data
      PGPASSWORD: 12345
    volumes:
      - ./secondary_data:/var/lib/postgresql/data
      - ./secondary_init:/docker-entrypoint-initdb.d
    depends_on:
      - post_service
    networks:
      - postgres_net


  redis-node-1: &redis-node-template
    image:  redis:7.2.11-alpine3.21
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - 7001:6379
    networks:
      - redis_cluster_net

  redis-node-2:
    <<: *redis-node-template
    ports:
      - 7002:6379

  redis-node-3:
    <<: *redis-node-template
    ports:
      - 7003:6379

  redis-node-4:
    <<: *redis-node-template
    ports:
      - 7004:6379
  redis-node-5:
    <<: *redis-node-template
    ports:
      - 7005:6379

  redis-node-6:
    <<: *redis-node-template
    ports:
      - 7006:6379

  redis-cluster-creator:
    image: redis:7.2.11-alpine3.21
    command: > 
      sh -c "sleep 10 && echo 'yes' | redis-cli --cluster create redis-node-1:6379 redis-node-2:6379 redis-node-3:6379 redis-node-4:6379 redis-node-5:6379 redis-node-6:6379 --cluster-replicas 1"
    depends_on:
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
      - redis-node-6
    networks:
      - redis_cluster_net


volumes:
  kafka_data:
    driver: local