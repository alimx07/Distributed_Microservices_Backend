// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: kafka_posts.proto

package services_bindings_go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Post struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	LikesCount    int64                  `protobuf:"varint,4,opt,name=likes_count,json=likesCount,proto3" json:"likes_count,omitempty"`
	CommentsCount int64                  `protobuf:"varint,5,opt,name=comments_count,json=commentsCount,proto3" json:"comments_count,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Post) Reset() {
	*x = Post{}
	mi := &file_kafka_posts_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Post) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Post) ProtoMessage() {}

func (x *Post) ProtoReflect() protoreflect.Message {
	mi := &file_kafka_posts_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Post.ProtoReflect.Descriptor instead.
func (*Post) Descriptor() ([]byte, []int) {
	return file_kafka_posts_proto_rawDescGZIP(), []int{0}
}

func (x *Post) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Post) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Post) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Post) GetLikesCount() int64 {
	if x != nil {
		return x.LikesCount
	}
	return 0
}

func (x *Post) GetCommentsCount() int64 {
	if x != nil {
		return x.CommentsCount
	}
	return 0
}

func (x *Post) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type PostEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	EventType     string                 `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	OccuredAt     int64                  `protobuf:"varint,3,opt,name=occured_at,json=occuredAt,proto3" json:"occured_at,omitempty"`
	Source        string                 `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	Post          *Post                  `protobuf:"bytes,5,opt,name=post,proto3" json:"post,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostEvent) Reset() {
	*x = PostEvent{}
	mi := &file_kafka_posts_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostEvent) ProtoMessage() {}

func (x *PostEvent) ProtoReflect() protoreflect.Message {
	mi := &file_kafka_posts_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostEvent.ProtoReflect.Descriptor instead.
func (*PostEvent) Descriptor() ([]byte, []int) {
	return file_kafka_posts_proto_rawDescGZIP(), []int{1}
}

func (x *PostEvent) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *PostEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *PostEvent) GetOccuredAt() int64 {
	if x != nil {
		return x.OccuredAt
	}
	return 0
}

func (x *PostEvent) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *PostEvent) GetPost() *Post {
	if x != nil {
		return x.Post
	}
	return nil
}

var File_kafka_posts_proto protoreflect.FileDescriptor

const file_kafka_posts_proto_rawDesc = "" +
	"\n" +
	"\x11kafka_posts.proto\"\xb0\x01\n" +
	"\x04Post\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x1f\n" +
	"\vlikes_count\x18\x04 \x01(\x03R\n" +
	"likesCount\x12%\n" +
	"\x0ecomments_count\x18\x05 \x01(\x03R\rcommentsCount\x12\x1d\n" +
	"\n" +
	"created_at\x18\x06 \x01(\x03R\tcreatedAt\"\x97\x01\n" +
	"\tPostEvent\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x1d\n" +
	"\n" +
	"event_type\x18\x02 \x01(\tR\teventType\x12\x1d\n" +
	"\n" +
	"occured_at\x18\x03 \x01(\x03R\toccuredAt\x12\x16\n" +
	"\x06source\x18\x04 \x01(\tR\x06source\x12\x19\n" +
	"\x04post\x18\x05 \x01(\v2\x05.PostR\x04postB\x17Z\x15/services_bindings_gob\x06proto3"

var (
	file_kafka_posts_proto_rawDescOnce sync.Once
	file_kafka_posts_proto_rawDescData []byte
)

func file_kafka_posts_proto_rawDescGZIP() []byte {
	file_kafka_posts_proto_rawDescOnce.Do(func() {
		file_kafka_posts_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kafka_posts_proto_rawDesc), len(file_kafka_posts_proto_rawDesc)))
	})
	return file_kafka_posts_proto_rawDescData
}

var file_kafka_posts_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_kafka_posts_proto_goTypes = []any{
	(*Post)(nil),      // 0: Post
	(*PostEvent)(nil), // 1: PostEvent
}
var file_kafka_posts_proto_depIdxs = []int32{
	0, // 0: PostEvent.post:type_name -> Post
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_kafka_posts_proto_init() }
func file_kafka_posts_proto_init() {
	if File_kafka_posts_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kafka_posts_proto_rawDesc), len(file_kafka_posts_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kafka_posts_proto_goTypes,
		DependencyIndexes: file_kafka_posts_proto_depIdxs,
		MessageInfos:      file_kafka_posts_proto_msgTypes,
	}.Build()
	File_kafka_posts_proto = out.File
	file_kafka_posts_proto_goTypes = nil
	file_kafka_posts_proto_depIdxs = nil
}
